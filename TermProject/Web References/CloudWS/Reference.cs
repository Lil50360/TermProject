//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace TermProject.CloudWS {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="CloudServiceSoap", Namespace="http://tempuri.org/")]
    public partial class CloudService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback RegisterOperationCompleted;
        
        private System.Threading.SendOrPostCallback UsernameExistOperationCompleted;
        
        private System.Threading.SendOrPostCallback PasswordMatchOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectUserTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFileByUserNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSingleFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback TPGetUserIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateStorageCapOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback Register2OperationCompleted;
        
        private System.Threading.SendOrPostCallback UsernameExist2OperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateUserNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateUserEmailOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangePasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetfilesOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateCapOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFilesByUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFilesRestoreByUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectRowByIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectRowByIDFromBinOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteRowByIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteRowByIDFromBinOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertIntoBinOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertIntoTPFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectAllFromBinOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertTransactionOperationCompleted;
        
        private System.Threading.SendOrPostCallback ShowCusTransactionOperationCompleted;
        
        private System.Threading.SendOrPostCallback UserIDExistOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllAccountsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountByIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserNameByIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback UsernameExistInFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback AdminLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllAdminAccountsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAdminLogsOperationCompleted;
        
        private System.Threading.SendOrPostCallback UsernameExistInAdminLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback EnterQuestionOperationCompleted;
        
        private System.Threading.SendOrPostCallback EnterAnswerOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetQAOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public CloudService() {
            this.Url = global::TermProject.Properties.Settings.Default.TermProject_CloudWS_CloudService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event RegisterCompletedEventHandler RegisterCompleted;
        
        /// <remarks/>
        public event UsernameExistCompletedEventHandler UsernameExistCompleted;
        
        /// <remarks/>
        public event PasswordMatchCompletedEventHandler PasswordMatchCompleted;
        
        /// <remarks/>
        public event GetUserNameCompletedEventHandler GetUserNameCompleted;
        
        /// <remarks/>
        public event GetUserIDCompletedEventHandler GetUserIDCompleted;
        
        /// <remarks/>
        public event SelectUserTypeCompletedEventHandler SelectUserTypeCompleted;
        
        /// <remarks/>
        public event SaveFileCompletedEventHandler SaveFileCompleted;
        
        /// <remarks/>
        public event GetFileCompletedEventHandler GetFileCompleted;
        
        /// <remarks/>
        public event GetFileByUserNameCompletedEventHandler GetFileByUserNameCompleted;
        
        /// <remarks/>
        public event GetSingleFileCompletedEventHandler GetSingleFileCompleted;
        
        /// <remarks/>
        public event TPGetUserIDCompletedEventHandler TPGetUserIDCompleted;
        
        /// <remarks/>
        public event GetAccountCompletedEventHandler GetAccountCompleted;
        
        /// <remarks/>
        public event DeleteAccountCompletedEventHandler DeleteAccountCompleted;
        
        /// <remarks/>
        public event UpdateStorageCapCompletedEventHandler UpdateStorageCapCompleted;
        
        /// <remarks/>
        public event UpdateUserCompletedEventHandler UpdateUserCompleted;
        
        /// <remarks/>
        public event Register2CompletedEventHandler Register2Completed;
        
        /// <remarks/>
        public event UsernameExist2CompletedEventHandler UsernameExist2Completed;
        
        /// <remarks/>
        public event UpdateUserNameCompletedEventHandler UpdateUserNameCompleted;
        
        /// <remarks/>
        public event UpdateUserEmailCompletedEventHandler UpdateUserEmailCompleted;
        
        /// <remarks/>
        public event ChangePasswordCompletedEventHandler ChangePasswordCompleted;
        
        /// <remarks/>
        public event GetfilesCompletedEventHandler GetfilesCompleted;
        
        /// <remarks/>
        public event UpdateCapCompletedEventHandler UpdateCapCompleted;
        
        /// <remarks/>
        public event GetFilesByUserCompletedEventHandler GetFilesByUserCompleted;
        
        /// <remarks/>
        public event GetFilesRestoreByUserCompletedEventHandler GetFilesRestoreByUserCompleted;
        
        /// <remarks/>
        public event SelectRowByIDCompletedEventHandler SelectRowByIDCompleted;
        
        /// <remarks/>
        public event SelectRowByIDFromBinCompletedEventHandler SelectRowByIDFromBinCompleted;
        
        /// <remarks/>
        public event DeleteRowByIDCompletedEventHandler DeleteRowByIDCompleted;
        
        /// <remarks/>
        public event DeleteRowByIDFromBinCompletedEventHandler DeleteRowByIDFromBinCompleted;
        
        /// <remarks/>
        public event InsertIntoBinCompletedEventHandler InsertIntoBinCompleted;
        
        /// <remarks/>
        public event InsertIntoTPFileCompletedEventHandler InsertIntoTPFileCompleted;
        
        /// <remarks/>
        public event SelectAllFromBinCompletedEventHandler SelectAllFromBinCompleted;
        
        /// <remarks/>
        public event InsertTransactionCompletedEventHandler InsertTransactionCompleted;
        
        /// <remarks/>
        public event ShowCusTransactionCompletedEventHandler ShowCusTransactionCompleted;
        
        /// <remarks/>
        public event UserIDExistCompletedEventHandler UserIDExistCompleted;
        
        /// <remarks/>
        public event GetAllAccountsCompletedEventHandler GetAllAccountsCompleted;
        
        /// <remarks/>
        public event GetAccountByIDCompletedEventHandler GetAccountByIDCompleted;
        
        /// <remarks/>
        public event UpdateStatusCompletedEventHandler UpdateStatusCompleted;
        
        /// <remarks/>
        public event GetUserNameByIDCompletedEventHandler GetUserNameByIDCompleted;
        
        /// <remarks/>
        public event UsernameExistInFileCompletedEventHandler UsernameExistInFileCompleted;
        
        /// <remarks/>
        public event AdminLogCompletedEventHandler AdminLogCompleted;
        
        /// <remarks/>
        public event GetAllAdminAccountsCompletedEventHandler GetAllAdminAccountsCompleted;
        
        /// <remarks/>
        public event GetAdminLogsCompletedEventHandler GetAdminLogsCompleted;
        
        /// <remarks/>
        public event UsernameExistInAdminLogCompletedEventHandler UsernameExistInAdminLogCompleted;
        
        /// <remarks/>
        public event EnterQuestionCompletedEventHandler EnterQuestionCompleted;
        
        /// <remarks/>
        public event EnterAnswerCompletedEventHandler EnterAnswerCompleted;
        
        /// <remarks/>
        public event GetQACompletedEventHandler GetQACompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Register", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Register(string userType, string userName, string password, string firstName, string lastName, string email, long storage, string status) {
            this.Invoke("Register", new object[] {
                        userType,
                        userName,
                        password,
                        firstName,
                        lastName,
                        email,
                        storage,
                        status});
        }
        
        /// <remarks/>
        public void RegisterAsync(string userType, string userName, string password, string firstName, string lastName, string email, long storage, string status) {
            this.RegisterAsync(userType, userName, password, firstName, lastName, email, storage, status, null);
        }
        
        /// <remarks/>
        public void RegisterAsync(string userType, string userName, string password, string firstName, string lastName, string email, long storage, string status, object userState) {
            if ((this.RegisterOperationCompleted == null)) {
                this.RegisterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRegisterOperationCompleted);
            }
            this.InvokeAsync("Register", new object[] {
                        userType,
                        userName,
                        password,
                        firstName,
                        lastName,
                        email,
                        storage,
                        status}, this.RegisterOperationCompleted, userState);
        }
        
        private void OnRegisterOperationCompleted(object arg) {
            if ((this.RegisterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RegisterCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UsernameExist", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UsernameExist(string Username) {
            object[] results = this.Invoke("UsernameExist", new object[] {
                        Username});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UsernameExistAsync(string Username) {
            this.UsernameExistAsync(Username, null);
        }
        
        /// <remarks/>
        public void UsernameExistAsync(string Username, object userState) {
            if ((this.UsernameExistOperationCompleted == null)) {
                this.UsernameExistOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUsernameExistOperationCompleted);
            }
            this.InvokeAsync("UsernameExist", new object[] {
                        Username}, this.UsernameExistOperationCompleted, userState);
        }
        
        private void OnUsernameExistOperationCompleted(object arg) {
            if ((this.UsernameExistCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UsernameExistCompleted(this, new UsernameExistCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PasswordMatch", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool PasswordMatch(string Username, string Password) {
            object[] results = this.Invoke("PasswordMatch", new object[] {
                        Username,
                        Password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void PasswordMatchAsync(string Username, string Password) {
            this.PasswordMatchAsync(Username, Password, null);
        }
        
        /// <remarks/>
        public void PasswordMatchAsync(string Username, string Password, object userState) {
            if ((this.PasswordMatchOperationCompleted == null)) {
                this.PasswordMatchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPasswordMatchOperationCompleted);
            }
            this.InvokeAsync("PasswordMatch", new object[] {
                        Username,
                        Password}, this.PasswordMatchOperationCompleted, userState);
        }
        
        private void OnPasswordMatchOperationCompleted(object arg) {
            if ((this.PasswordMatchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PasswordMatchCompleted(this, new PasswordMatchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetUserName(string Username) {
            object[] results = this.Invoke("GetUserName", new object[] {
                        Username});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserNameAsync(string Username) {
            this.GetUserNameAsync(Username, null);
        }
        
        /// <remarks/>
        public void GetUserNameAsync(string Username, object userState) {
            if ((this.GetUserNameOperationCompleted == null)) {
                this.GetUserNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserNameOperationCompleted);
            }
            this.InvokeAsync("GetUserName", new object[] {
                        Username}, this.GetUserNameOperationCompleted, userState);
        }
        
        private void OnGetUserNameOperationCompleted(object arg) {
            if ((this.GetUserNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserNameCompleted(this, new GetUserNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetUserID(string Username) {
            object[] results = this.Invoke("GetUserID", new object[] {
                        Username});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserIDAsync(string Username) {
            this.GetUserIDAsync(Username, null);
        }
        
        /// <remarks/>
        public void GetUserIDAsync(string Username, object userState) {
            if ((this.GetUserIDOperationCompleted == null)) {
                this.GetUserIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserIDOperationCompleted);
            }
            this.InvokeAsync("GetUserID", new object[] {
                        Username}, this.GetUserIDOperationCompleted, userState);
        }
        
        private void OnGetUserIDOperationCompleted(object arg) {
            if ((this.GetUserIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserIDCompleted(this, new GetUserIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SelectUserType", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SelectUserType(string securityCode, string userName) {
            object[] results = this.Invoke("SelectUserType", new object[] {
                        securityCode,
                        userName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SelectUserTypeAsync(string securityCode, string userName) {
            this.SelectUserTypeAsync(securityCode, userName, null);
        }
        
        /// <remarks/>
        public void SelectUserTypeAsync(string securityCode, string userName, object userState) {
            if ((this.SelectUserTypeOperationCompleted == null)) {
                this.SelectUserTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectUserTypeOperationCompleted);
            }
            this.InvokeAsync("SelectUserType", new object[] {
                        securityCode,
                        userName}, this.SelectUserTypeOperationCompleted, userState);
        }
        
        private void OnSelectUserTypeOperationCompleted(object arg) {
            if ((this.SelectUserTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectUserTypeCompleted(this, new SelectUserTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveFile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SaveFile(string securityCode, string name, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] content, string extn) {
            this.Invoke("SaveFile", new object[] {
                        securityCode,
                        name,
                        content,
                        extn});
        }
        
        /// <remarks/>
        public void SaveFileAsync(string securityCode, string name, byte[] content, string extn) {
            this.SaveFileAsync(securityCode, name, content, extn, null);
        }
        
        /// <remarks/>
        public void SaveFileAsync(string securityCode, string name, byte[] content, string extn, object userState) {
            if ((this.SaveFileOperationCompleted == null)) {
                this.SaveFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveFileOperationCompleted);
            }
            this.InvokeAsync("SaveFile", new object[] {
                        securityCode,
                        name,
                        content,
                        extn}, this.SaveFileOperationCompleted, userState);
        }
        
        private void OnSaveFileOperationCompleted(object arg) {
            if ((this.SaveFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveFileCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetFile(string securityCode) {
            object[] results = this.Invoke("GetFile", new object[] {
                        securityCode});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetFileAsync(string securityCode) {
            this.GetFileAsync(securityCode, null);
        }
        
        /// <remarks/>
        public void GetFileAsync(string securityCode, object userState) {
            if ((this.GetFileOperationCompleted == null)) {
                this.GetFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFileOperationCompleted);
            }
            this.InvokeAsync("GetFile", new object[] {
                        securityCode}, this.GetFileOperationCompleted, userState);
        }
        
        private void OnGetFileOperationCompleted(object arg) {
            if ((this.GetFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFileCompleted(this, new GetFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFileByUserName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetFileByUserName(string securityCode, string username) {
            object[] results = this.Invoke("GetFileByUserName", new object[] {
                        securityCode,
                        username});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetFileByUserNameAsync(string securityCode, string username) {
            this.GetFileByUserNameAsync(securityCode, username, null);
        }
        
        /// <remarks/>
        public void GetFileByUserNameAsync(string securityCode, string username, object userState) {
            if ((this.GetFileByUserNameOperationCompleted == null)) {
                this.GetFileByUserNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFileByUserNameOperationCompleted);
            }
            this.InvokeAsync("GetFileByUserName", new object[] {
                        securityCode,
                        username}, this.GetFileByUserNameOperationCompleted, userState);
        }
        
        private void OnGetFileByUserNameOperationCompleted(object arg) {
            if ((this.GetFileByUserNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFileByUserNameCompleted(this, new GetFileByUserNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSingleFile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GetSingleFile(string securityCode, int id, string name, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] content, string extn) {
            this.Invoke("GetSingleFile", new object[] {
                        securityCode,
                        id,
                        name,
                        content,
                        extn});
        }
        
        /// <remarks/>
        public void GetSingleFileAsync(string securityCode, int id, string name, byte[] content, string extn) {
            this.GetSingleFileAsync(securityCode, id, name, content, extn, null);
        }
        
        /// <remarks/>
        public void GetSingleFileAsync(string securityCode, int id, string name, byte[] content, string extn, object userState) {
            if ((this.GetSingleFileOperationCompleted == null)) {
                this.GetSingleFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSingleFileOperationCompleted);
            }
            this.InvokeAsync("GetSingleFile", new object[] {
                        securityCode,
                        id,
                        name,
                        content,
                        extn}, this.GetSingleFileOperationCompleted, userState);
        }
        
        private void OnGetSingleFileOperationCompleted(object arg) {
            if ((this.GetSingleFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSingleFileCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TPGetUserID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int TPGetUserID(string securityCode, string userName) {
            object[] results = this.Invoke("TPGetUserID", new object[] {
                        securityCode,
                        userName});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void TPGetUserIDAsync(string securityCode, string userName) {
            this.TPGetUserIDAsync(securityCode, userName, null);
        }
        
        /// <remarks/>
        public void TPGetUserIDAsync(string securityCode, string userName, object userState) {
            if ((this.TPGetUserIDOperationCompleted == null)) {
                this.TPGetUserIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTPGetUserIDOperationCompleted);
            }
            this.InvokeAsync("TPGetUserID", new object[] {
                        securityCode,
                        userName}, this.TPGetUserIDOperationCompleted, userState);
        }
        
        private void OnTPGetUserIDOperationCompleted(object arg) {
            if ((this.TPGetUserIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TPGetUserIDCompleted(this, new TPGetUserIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAccount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAccount(string securityCode, string userName) {
            object[] results = this.Invoke("GetAccount", new object[] {
                        securityCode,
                        userName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountAsync(string securityCode, string userName) {
            this.GetAccountAsync(securityCode, userName, null);
        }
        
        /// <remarks/>
        public void GetAccountAsync(string securityCode, string userName, object userState) {
            if ((this.GetAccountOperationCompleted == null)) {
                this.GetAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountOperationCompleted);
            }
            this.InvokeAsync("GetAccount", new object[] {
                        securityCode,
                        userName}, this.GetAccountOperationCompleted, userState);
        }
        
        private void OnGetAccountOperationCompleted(object arg) {
            if ((this.GetAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountCompleted(this, new GetAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteAccount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteAccount(string securityCode, string userName) {
            this.Invoke("DeleteAccount", new object[] {
                        securityCode,
                        userName});
        }
        
        /// <remarks/>
        public void DeleteAccountAsync(string securityCode, string userName) {
            this.DeleteAccountAsync(securityCode, userName, null);
        }
        
        /// <remarks/>
        public void DeleteAccountAsync(string securityCode, string userName, object userState) {
            if ((this.DeleteAccountOperationCompleted == null)) {
                this.DeleteAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteAccountOperationCompleted);
            }
            this.InvokeAsync("DeleteAccount", new object[] {
                        securityCode,
                        userName}, this.DeleteAccountOperationCompleted, userState);
        }
        
        private void OnDeleteAccountOperationCompleted(object arg) {
            if ((this.DeleteAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteAccountCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateStorageCap", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateStorageCap(string securityCode, string userName, long storagecap) {
            this.Invoke("UpdateStorageCap", new object[] {
                        securityCode,
                        userName,
                        storagecap});
        }
        
        /// <remarks/>
        public void UpdateStorageCapAsync(string securityCode, string userName, long storagecap) {
            this.UpdateStorageCapAsync(securityCode, userName, storagecap, null);
        }
        
        /// <remarks/>
        public void UpdateStorageCapAsync(string securityCode, string userName, long storagecap, object userState) {
            if ((this.UpdateStorageCapOperationCompleted == null)) {
                this.UpdateStorageCapOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateStorageCapOperationCompleted);
            }
            this.InvokeAsync("UpdateStorageCap", new object[] {
                        securityCode,
                        userName,
                        storagecap}, this.UpdateStorageCapOperationCompleted, userState);
        }
        
        private void OnUpdateStorageCapOperationCompleted(object arg) {
            if ((this.UpdateStorageCapCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateStorageCapCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateUser(string securityCode, string userName, string password, string firstName, string lastName, string email) {
            this.Invoke("UpdateUser", new object[] {
                        securityCode,
                        userName,
                        password,
                        firstName,
                        lastName,
                        email});
        }
        
        /// <remarks/>
        public void UpdateUserAsync(string securityCode, string userName, string password, string firstName, string lastName, string email) {
            this.UpdateUserAsync(securityCode, userName, password, firstName, lastName, email, null);
        }
        
        /// <remarks/>
        public void UpdateUserAsync(string securityCode, string userName, string password, string firstName, string lastName, string email, object userState) {
            if ((this.UpdateUserOperationCompleted == null)) {
                this.UpdateUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateUserOperationCompleted);
            }
            this.InvokeAsync("UpdateUser", new object[] {
                        securityCode,
                        userName,
                        password,
                        firstName,
                        lastName,
                        email}, this.UpdateUserOperationCompleted, userState);
        }
        
        private void OnUpdateUserOperationCompleted(object arg) {
            if ((this.UpdateUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateUserCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Register2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Register2(string securityCode, string userType, string userName, string password, string firstName, string lastName, string email, long storagecap, string status) {
            this.Invoke("Register2", new object[] {
                        securityCode,
                        userType,
                        userName,
                        password,
                        firstName,
                        lastName,
                        email,
                        storagecap,
                        status});
        }
        
        /// <remarks/>
        public void Register2Async(string securityCode, string userType, string userName, string password, string firstName, string lastName, string email, long storagecap, string status) {
            this.Register2Async(securityCode, userType, userName, password, firstName, lastName, email, storagecap, status, null);
        }
        
        /// <remarks/>
        public void Register2Async(string securityCode, string userType, string userName, string password, string firstName, string lastName, string email, long storagecap, string status, object userState) {
            if ((this.Register2OperationCompleted == null)) {
                this.Register2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnRegister2OperationCompleted);
            }
            this.InvokeAsync("Register2", new object[] {
                        securityCode,
                        userType,
                        userName,
                        password,
                        firstName,
                        lastName,
                        email,
                        storagecap,
                        status}, this.Register2OperationCompleted, userState);
        }
        
        private void OnRegister2OperationCompleted(object arg) {
            if ((this.Register2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Register2Completed(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UsernameExist2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UsernameExist2(string securityCode, string username) {
            object[] results = this.Invoke("UsernameExist2", new object[] {
                        securityCode,
                        username});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UsernameExist2Async(string securityCode, string username) {
            this.UsernameExist2Async(securityCode, username, null);
        }
        
        /// <remarks/>
        public void UsernameExist2Async(string securityCode, string username, object userState) {
            if ((this.UsernameExist2OperationCompleted == null)) {
                this.UsernameExist2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnUsernameExist2OperationCompleted);
            }
            this.InvokeAsync("UsernameExist2", new object[] {
                        securityCode,
                        username}, this.UsernameExist2OperationCompleted, userState);
        }
        
        private void OnUsernameExist2OperationCompleted(object arg) {
            if ((this.UsernameExist2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UsernameExist2Completed(this, new UsernameExist2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateUserName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateUserName(string securityCode, string userName, string firstName, string lastName) {
            this.Invoke("UpdateUserName", new object[] {
                        securityCode,
                        userName,
                        firstName,
                        lastName});
        }
        
        /// <remarks/>
        public void UpdateUserNameAsync(string securityCode, string userName, string firstName, string lastName) {
            this.UpdateUserNameAsync(securityCode, userName, firstName, lastName, null);
        }
        
        /// <remarks/>
        public void UpdateUserNameAsync(string securityCode, string userName, string firstName, string lastName, object userState) {
            if ((this.UpdateUserNameOperationCompleted == null)) {
                this.UpdateUserNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateUserNameOperationCompleted);
            }
            this.InvokeAsync("UpdateUserName", new object[] {
                        securityCode,
                        userName,
                        firstName,
                        lastName}, this.UpdateUserNameOperationCompleted, userState);
        }
        
        private void OnUpdateUserNameOperationCompleted(object arg) {
            if ((this.UpdateUserNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateUserNameCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateUserEmail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateUserEmail(string securityCode, string userName, string email) {
            this.Invoke("UpdateUserEmail", new object[] {
                        securityCode,
                        userName,
                        email});
        }
        
        /// <remarks/>
        public void UpdateUserEmailAsync(string securityCode, string userName, string email) {
            this.UpdateUserEmailAsync(securityCode, userName, email, null);
        }
        
        /// <remarks/>
        public void UpdateUserEmailAsync(string securityCode, string userName, string email, object userState) {
            if ((this.UpdateUserEmailOperationCompleted == null)) {
                this.UpdateUserEmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateUserEmailOperationCompleted);
            }
            this.InvokeAsync("UpdateUserEmail", new object[] {
                        securityCode,
                        userName,
                        email}, this.UpdateUserEmailOperationCompleted, userState);
        }
        
        private void OnUpdateUserEmailOperationCompleted(object arg) {
            if ((this.UpdateUserEmailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateUserEmailCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ChangePassword", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ChangePassword(string securityCode, string userName, string password) {
            this.Invoke("ChangePassword", new object[] {
                        securityCode,
                        userName,
                        password});
        }
        
        /// <remarks/>
        public void ChangePasswordAsync(string securityCode, string userName, string password) {
            this.ChangePasswordAsync(securityCode, userName, password, null);
        }
        
        /// <remarks/>
        public void ChangePasswordAsync(string securityCode, string userName, string password, object userState) {
            if ((this.ChangePasswordOperationCompleted == null)) {
                this.ChangePasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangePasswordOperationCompleted);
            }
            this.InvokeAsync("ChangePassword", new object[] {
                        securityCode,
                        userName,
                        password}, this.ChangePasswordOperationCompleted, userState);
        }
        
        private void OnChangePasswordOperationCompleted(object arg) {
            if ((this.ChangePasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangePasswordCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Getfiles", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Getfiles(string securitycode, string userName) {
            object[] results = this.Invoke("Getfiles", new object[] {
                        securitycode,
                        userName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetfilesAsync(string securitycode, string userName) {
            this.GetfilesAsync(securitycode, userName, null);
        }
        
        /// <remarks/>
        public void GetfilesAsync(string securitycode, string userName, object userState) {
            if ((this.GetfilesOperationCompleted == null)) {
                this.GetfilesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetfilesOperationCompleted);
            }
            this.InvokeAsync("Getfiles", new object[] {
                        securitycode,
                        userName}, this.GetfilesOperationCompleted, userState);
        }
        
        private void OnGetfilesOperationCompleted(object arg) {
            if ((this.GetfilesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetfilesCompleted(this, new GetfilesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateCap", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateCap(string securitycode, string userName, long size) {
            this.Invoke("UpdateCap", new object[] {
                        securitycode,
                        userName,
                        size});
        }
        
        /// <remarks/>
        public void UpdateCapAsync(string securitycode, string userName, long size) {
            this.UpdateCapAsync(securitycode, userName, size, null);
        }
        
        /// <remarks/>
        public void UpdateCapAsync(string securitycode, string userName, long size, object userState) {
            if ((this.UpdateCapOperationCompleted == null)) {
                this.UpdateCapOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateCapOperationCompleted);
            }
            this.InvokeAsync("UpdateCap", new object[] {
                        securitycode,
                        userName,
                        size}, this.UpdateCapOperationCompleted, userState);
        }
        
        private void OnUpdateCapOperationCompleted(object arg) {
            if ((this.UpdateCapCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateCapCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFilesByUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetFilesByUser(string securitycode, string userName) {
            object[] results = this.Invoke("GetFilesByUser", new object[] {
                        securitycode,
                        userName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetFilesByUserAsync(string securitycode, string userName) {
            this.GetFilesByUserAsync(securitycode, userName, null);
        }
        
        /// <remarks/>
        public void GetFilesByUserAsync(string securitycode, string userName, object userState) {
            if ((this.GetFilesByUserOperationCompleted == null)) {
                this.GetFilesByUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFilesByUserOperationCompleted);
            }
            this.InvokeAsync("GetFilesByUser", new object[] {
                        securitycode,
                        userName}, this.GetFilesByUserOperationCompleted, userState);
        }
        
        private void OnGetFilesByUserOperationCompleted(object arg) {
            if ((this.GetFilesByUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFilesByUserCompleted(this, new GetFilesByUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFilesRestoreByUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetFilesRestoreByUser(string securitycode, string userName) {
            object[] results = this.Invoke("GetFilesRestoreByUser", new object[] {
                        securitycode,
                        userName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetFilesRestoreByUserAsync(string securitycode, string userName) {
            this.GetFilesRestoreByUserAsync(securitycode, userName, null);
        }
        
        /// <remarks/>
        public void GetFilesRestoreByUserAsync(string securitycode, string userName, object userState) {
            if ((this.GetFilesRestoreByUserOperationCompleted == null)) {
                this.GetFilesRestoreByUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFilesRestoreByUserOperationCompleted);
            }
            this.InvokeAsync("GetFilesRestoreByUser", new object[] {
                        securitycode,
                        userName}, this.GetFilesRestoreByUserOperationCompleted, userState);
        }
        
        private void OnGetFilesRestoreByUserOperationCompleted(object arg) {
            if ((this.GetFilesRestoreByUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFilesRestoreByUserCompleted(this, new GetFilesRestoreByUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SelectRowByID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SelectRowByID(string securityCode, int Id) {
            object[] results = this.Invoke("SelectRowByID", new object[] {
                        securityCode,
                        Id});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void SelectRowByIDAsync(string securityCode, int Id) {
            this.SelectRowByIDAsync(securityCode, Id, null);
        }
        
        /// <remarks/>
        public void SelectRowByIDAsync(string securityCode, int Id, object userState) {
            if ((this.SelectRowByIDOperationCompleted == null)) {
                this.SelectRowByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectRowByIDOperationCompleted);
            }
            this.InvokeAsync("SelectRowByID", new object[] {
                        securityCode,
                        Id}, this.SelectRowByIDOperationCompleted, userState);
        }
        
        private void OnSelectRowByIDOperationCompleted(object arg) {
            if ((this.SelectRowByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectRowByIDCompleted(this, new SelectRowByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SelectRowByIDFromBin", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SelectRowByIDFromBin(string securityCode, int Id) {
            object[] results = this.Invoke("SelectRowByIDFromBin", new object[] {
                        securityCode,
                        Id});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void SelectRowByIDFromBinAsync(string securityCode, int Id) {
            this.SelectRowByIDFromBinAsync(securityCode, Id, null);
        }
        
        /// <remarks/>
        public void SelectRowByIDFromBinAsync(string securityCode, int Id, object userState) {
            if ((this.SelectRowByIDFromBinOperationCompleted == null)) {
                this.SelectRowByIDFromBinOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectRowByIDFromBinOperationCompleted);
            }
            this.InvokeAsync("SelectRowByIDFromBin", new object[] {
                        securityCode,
                        Id}, this.SelectRowByIDFromBinOperationCompleted, userState);
        }
        
        private void OnSelectRowByIDFromBinOperationCompleted(object arg) {
            if ((this.SelectRowByIDFromBinCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectRowByIDFromBinCompleted(this, new SelectRowByIDFromBinCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteRowByID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteRowByID(string securitycode, int Id) {
            this.Invoke("DeleteRowByID", new object[] {
                        securitycode,
                        Id});
        }
        
        /// <remarks/>
        public void DeleteRowByIDAsync(string securitycode, int Id) {
            this.DeleteRowByIDAsync(securitycode, Id, null);
        }
        
        /// <remarks/>
        public void DeleteRowByIDAsync(string securitycode, int Id, object userState) {
            if ((this.DeleteRowByIDOperationCompleted == null)) {
                this.DeleteRowByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteRowByIDOperationCompleted);
            }
            this.InvokeAsync("DeleteRowByID", new object[] {
                        securitycode,
                        Id}, this.DeleteRowByIDOperationCompleted, userState);
        }
        
        private void OnDeleteRowByIDOperationCompleted(object arg) {
            if ((this.DeleteRowByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteRowByIDCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteRowByIDFromBin", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteRowByIDFromBin(string securitycode, int Id) {
            this.Invoke("DeleteRowByIDFromBin", new object[] {
                        securitycode,
                        Id});
        }
        
        /// <remarks/>
        public void DeleteRowByIDFromBinAsync(string securitycode, int Id) {
            this.DeleteRowByIDFromBinAsync(securitycode, Id, null);
        }
        
        /// <remarks/>
        public void DeleteRowByIDFromBinAsync(string securitycode, int Id, object userState) {
            if ((this.DeleteRowByIDFromBinOperationCompleted == null)) {
                this.DeleteRowByIDFromBinOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteRowByIDFromBinOperationCompleted);
            }
            this.InvokeAsync("DeleteRowByIDFromBin", new object[] {
                        securitycode,
                        Id}, this.DeleteRowByIDFromBinOperationCompleted, userState);
        }
        
        private void OnDeleteRowByIDFromBinOperationCompleted(object arg) {
            if ((this.DeleteRowByIDFromBinCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteRowByIDFromBinCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertIntoBin", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void InsertIntoBin(string securitycode, int id, string name, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] content, string extn, long size, System.DateTime date, string username) {
            this.Invoke("InsertIntoBin", new object[] {
                        securitycode,
                        id,
                        name,
                        content,
                        extn,
                        size,
                        date,
                        username});
        }
        
        /// <remarks/>
        public void InsertIntoBinAsync(string securitycode, int id, string name, byte[] content, string extn, long size, System.DateTime date, string username) {
            this.InsertIntoBinAsync(securitycode, id, name, content, extn, size, date, username, null);
        }
        
        /// <remarks/>
        public void InsertIntoBinAsync(string securitycode, int id, string name, byte[] content, string extn, long size, System.DateTime date, string username, object userState) {
            if ((this.InsertIntoBinOperationCompleted == null)) {
                this.InsertIntoBinOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertIntoBinOperationCompleted);
            }
            this.InvokeAsync("InsertIntoBin", new object[] {
                        securitycode,
                        id,
                        name,
                        content,
                        extn,
                        size,
                        date,
                        username}, this.InsertIntoBinOperationCompleted, userState);
        }
        
        private void OnInsertIntoBinOperationCompleted(object arg) {
            if ((this.InsertIntoBinCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertIntoBinCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertIntoTPFile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void InsertIntoTPFile(string securitycode, string name, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] content, string extn, long size, System.DateTime date, string username) {
            this.Invoke("InsertIntoTPFile", new object[] {
                        securitycode,
                        name,
                        content,
                        extn,
                        size,
                        date,
                        username});
        }
        
        /// <remarks/>
        public void InsertIntoTPFileAsync(string securitycode, string name, byte[] content, string extn, long size, System.DateTime date, string username) {
            this.InsertIntoTPFileAsync(securitycode, name, content, extn, size, date, username, null);
        }
        
        /// <remarks/>
        public void InsertIntoTPFileAsync(string securitycode, string name, byte[] content, string extn, long size, System.DateTime date, string username, object userState) {
            if ((this.InsertIntoTPFileOperationCompleted == null)) {
                this.InsertIntoTPFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertIntoTPFileOperationCompleted);
            }
            this.InvokeAsync("InsertIntoTPFile", new object[] {
                        securitycode,
                        name,
                        content,
                        extn,
                        size,
                        date,
                        username}, this.InsertIntoTPFileOperationCompleted, userState);
        }
        
        private void OnInsertIntoTPFileOperationCompleted(object arg) {
            if ((this.InsertIntoTPFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertIntoTPFileCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SelectAllFromBin", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SelectAllFromBin(string securityCode, string username) {
            object[] results = this.Invoke("SelectAllFromBin", new object[] {
                        securityCode,
                        username});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void SelectAllFromBinAsync(string securityCode, string username) {
            this.SelectAllFromBinAsync(securityCode, username, null);
        }
        
        /// <remarks/>
        public void SelectAllFromBinAsync(string securityCode, string username, object userState) {
            if ((this.SelectAllFromBinOperationCompleted == null)) {
                this.SelectAllFromBinOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectAllFromBinOperationCompleted);
            }
            this.InvokeAsync("SelectAllFromBin", new object[] {
                        securityCode,
                        username}, this.SelectAllFromBinOperationCompleted, userState);
        }
        
        private void OnSelectAllFromBinOperationCompleted(object arg) {
            if ((this.SelectAllFromBinCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectAllFromBinCompleted(this, new SelectAllFromBinCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertTransaction", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void InsertTransaction(string securityCode, string username, string cardType, string name, string number, System.DateTime expDate, int pin, System.DateTime transDate, double amount) {
            this.Invoke("InsertTransaction", new object[] {
                        securityCode,
                        username,
                        cardType,
                        name,
                        number,
                        expDate,
                        pin,
                        transDate,
                        amount});
        }
        
        /// <remarks/>
        public void InsertTransactionAsync(string securityCode, string username, string cardType, string name, string number, System.DateTime expDate, int pin, System.DateTime transDate, double amount) {
            this.InsertTransactionAsync(securityCode, username, cardType, name, number, expDate, pin, transDate, amount, null);
        }
        
        /// <remarks/>
        public void InsertTransactionAsync(string securityCode, string username, string cardType, string name, string number, System.DateTime expDate, int pin, System.DateTime transDate, double amount, object userState) {
            if ((this.InsertTransactionOperationCompleted == null)) {
                this.InsertTransactionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertTransactionOperationCompleted);
            }
            this.InvokeAsync("InsertTransaction", new object[] {
                        securityCode,
                        username,
                        cardType,
                        name,
                        number,
                        expDate,
                        pin,
                        transDate,
                        amount}, this.InsertTransactionOperationCompleted, userState);
        }
        
        private void OnInsertTransactionOperationCompleted(object arg) {
            if ((this.InsertTransactionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertTransactionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ShowCusTransaction", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ShowCusTransaction(string securityCode, string username) {
            object[] results = this.Invoke("ShowCusTransaction", new object[] {
                        securityCode,
                        username});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ShowCusTransactionAsync(string securityCode, string username) {
            this.ShowCusTransactionAsync(securityCode, username, null);
        }
        
        /// <remarks/>
        public void ShowCusTransactionAsync(string securityCode, string username, object userState) {
            if ((this.ShowCusTransactionOperationCompleted == null)) {
                this.ShowCusTransactionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnShowCusTransactionOperationCompleted);
            }
            this.InvokeAsync("ShowCusTransaction", new object[] {
                        securityCode,
                        username}, this.ShowCusTransactionOperationCompleted, userState);
        }
        
        private void OnShowCusTransactionOperationCompleted(object arg) {
            if ((this.ShowCusTransactionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ShowCusTransactionCompleted(this, new ShowCusTransactionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UserIDExist", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UserIDExist(string securityCode, int userID) {
            object[] results = this.Invoke("UserIDExist", new object[] {
                        securityCode,
                        userID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UserIDExistAsync(string securityCode, int userID) {
            this.UserIDExistAsync(securityCode, userID, null);
        }
        
        /// <remarks/>
        public void UserIDExistAsync(string securityCode, int userID, object userState) {
            if ((this.UserIDExistOperationCompleted == null)) {
                this.UserIDExistOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUserIDExistOperationCompleted);
            }
            this.InvokeAsync("UserIDExist", new object[] {
                        securityCode,
                        userID}, this.UserIDExistOperationCompleted, userState);
        }
        
        private void OnUserIDExistOperationCompleted(object arg) {
            if ((this.UserIDExistCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UserIDExistCompleted(this, new UserIDExistCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllAccounts", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAllAccounts(string securityCode) {
            object[] results = this.Invoke("GetAllAccounts", new object[] {
                        securityCode});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllAccountsAsync(string securityCode) {
            this.GetAllAccountsAsync(securityCode, null);
        }
        
        /// <remarks/>
        public void GetAllAccountsAsync(string securityCode, object userState) {
            if ((this.GetAllAccountsOperationCompleted == null)) {
                this.GetAllAccountsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllAccountsOperationCompleted);
            }
            this.InvokeAsync("GetAllAccounts", new object[] {
                        securityCode}, this.GetAllAccountsOperationCompleted, userState);
        }
        
        private void OnGetAllAccountsOperationCompleted(object arg) {
            if ((this.GetAllAccountsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllAccountsCompleted(this, new GetAllAccountsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAccountByID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAccountByID(string securityCode, int userID) {
            object[] results = this.Invoke("GetAccountByID", new object[] {
                        securityCode,
                        userID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountByIDAsync(string securityCode, int userID) {
            this.GetAccountByIDAsync(securityCode, userID, null);
        }
        
        /// <remarks/>
        public void GetAccountByIDAsync(string securityCode, int userID, object userState) {
            if ((this.GetAccountByIDOperationCompleted == null)) {
                this.GetAccountByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountByIDOperationCompleted);
            }
            this.InvokeAsync("GetAccountByID", new object[] {
                        securityCode,
                        userID}, this.GetAccountByIDOperationCompleted, userState);
        }
        
        private void OnGetAccountByIDOperationCompleted(object arg) {
            if ((this.GetAccountByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountByIDCompleted(this, new GetAccountByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateStatus(string securityCode, int userID, string status) {
            this.Invoke("UpdateStatus", new object[] {
                        securityCode,
                        userID,
                        status});
        }
        
        /// <remarks/>
        public void UpdateStatusAsync(string securityCode, int userID, string status) {
            this.UpdateStatusAsync(securityCode, userID, status, null);
        }
        
        /// <remarks/>
        public void UpdateStatusAsync(string securityCode, int userID, string status, object userState) {
            if ((this.UpdateStatusOperationCompleted == null)) {
                this.UpdateStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateStatusOperationCompleted);
            }
            this.InvokeAsync("UpdateStatus", new object[] {
                        securityCode,
                        userID,
                        status}, this.UpdateStatusOperationCompleted, userState);
        }
        
        private void OnUpdateStatusOperationCompleted(object arg) {
            if ((this.UpdateStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateStatusCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserNameByID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetUserNameByID(string securityCode, int userID) {
            object[] results = this.Invoke("GetUserNameByID", new object[] {
                        securityCode,
                        userID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserNameByIDAsync(string securityCode, int userID) {
            this.GetUserNameByIDAsync(securityCode, userID, null);
        }
        
        /// <remarks/>
        public void GetUserNameByIDAsync(string securityCode, int userID, object userState) {
            if ((this.GetUserNameByIDOperationCompleted == null)) {
                this.GetUserNameByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserNameByIDOperationCompleted);
            }
            this.InvokeAsync("GetUserNameByID", new object[] {
                        securityCode,
                        userID}, this.GetUserNameByIDOperationCompleted, userState);
        }
        
        private void OnGetUserNameByIDOperationCompleted(object arg) {
            if ((this.GetUserNameByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserNameByIDCompleted(this, new GetUserNameByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UsernameExistInFile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UsernameExistInFile(string securityCode, string Username) {
            object[] results = this.Invoke("UsernameExistInFile", new object[] {
                        securityCode,
                        Username});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UsernameExistInFileAsync(string securityCode, string Username) {
            this.UsernameExistInFileAsync(securityCode, Username, null);
        }
        
        /// <remarks/>
        public void UsernameExistInFileAsync(string securityCode, string Username, object userState) {
            if ((this.UsernameExistInFileOperationCompleted == null)) {
                this.UsernameExistInFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUsernameExistInFileOperationCompleted);
            }
            this.InvokeAsync("UsernameExistInFile", new object[] {
                        securityCode,
                        Username}, this.UsernameExistInFileOperationCompleted, userState);
        }
        
        private void OnUsernameExistInFileOperationCompleted(object arg) {
            if ((this.UsernameExistInFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UsernameExistInFileCompleted(this, new UsernameExistInFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AdminLog", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AdminLog(string securityCode, string Username, string description, System.DateTime date) {
            this.Invoke("AdminLog", new object[] {
                        securityCode,
                        Username,
                        description,
                        date});
        }
        
        /// <remarks/>
        public void AdminLogAsync(string securityCode, string Username, string description, System.DateTime date) {
            this.AdminLogAsync(securityCode, Username, description, date, null);
        }
        
        /// <remarks/>
        public void AdminLogAsync(string securityCode, string Username, string description, System.DateTime date, object userState) {
            if ((this.AdminLogOperationCompleted == null)) {
                this.AdminLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAdminLogOperationCompleted);
            }
            this.InvokeAsync("AdminLog", new object[] {
                        securityCode,
                        Username,
                        description,
                        date}, this.AdminLogOperationCompleted, userState);
        }
        
        private void OnAdminLogOperationCompleted(object arg) {
            if ((this.AdminLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AdminLogCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllAdminAccounts", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAllAdminAccounts(string securityCode) {
            object[] results = this.Invoke("GetAllAdminAccounts", new object[] {
                        securityCode});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllAdminAccountsAsync(string securityCode) {
            this.GetAllAdminAccountsAsync(securityCode, null);
        }
        
        /// <remarks/>
        public void GetAllAdminAccountsAsync(string securityCode, object userState) {
            if ((this.GetAllAdminAccountsOperationCompleted == null)) {
                this.GetAllAdminAccountsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllAdminAccountsOperationCompleted);
            }
            this.InvokeAsync("GetAllAdminAccounts", new object[] {
                        securityCode}, this.GetAllAdminAccountsOperationCompleted, userState);
        }
        
        private void OnGetAllAdminAccountsOperationCompleted(object arg) {
            if ((this.GetAllAdminAccountsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllAdminAccountsCompleted(this, new GetAllAdminAccountsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAdminLogs", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAdminLogs(string securitycode, string userName) {
            object[] results = this.Invoke("GetAdminLogs", new object[] {
                        securitycode,
                        userName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAdminLogsAsync(string securitycode, string userName) {
            this.GetAdminLogsAsync(securitycode, userName, null);
        }
        
        /// <remarks/>
        public void GetAdminLogsAsync(string securitycode, string userName, object userState) {
            if ((this.GetAdminLogsOperationCompleted == null)) {
                this.GetAdminLogsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAdminLogsOperationCompleted);
            }
            this.InvokeAsync("GetAdminLogs", new object[] {
                        securitycode,
                        userName}, this.GetAdminLogsOperationCompleted, userState);
        }
        
        private void OnGetAdminLogsOperationCompleted(object arg) {
            if ((this.GetAdminLogsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAdminLogsCompleted(this, new GetAdminLogsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UsernameExistInAdminLog", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UsernameExistInAdminLog(string securityCode, string Username) {
            object[] results = this.Invoke("UsernameExistInAdminLog", new object[] {
                        securityCode,
                        Username});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UsernameExistInAdminLogAsync(string securityCode, string Username) {
            this.UsernameExistInAdminLogAsync(securityCode, Username, null);
        }
        
        /// <remarks/>
        public void UsernameExistInAdminLogAsync(string securityCode, string Username, object userState) {
            if ((this.UsernameExistInAdminLogOperationCompleted == null)) {
                this.UsernameExistInAdminLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUsernameExistInAdminLogOperationCompleted);
            }
            this.InvokeAsync("UsernameExistInAdminLog", new object[] {
                        securityCode,
                        Username}, this.UsernameExistInAdminLogOperationCompleted, userState);
        }
        
        private void OnUsernameExistInAdminLogOperationCompleted(object arg) {
            if ((this.UsernameExistInAdminLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UsernameExistInAdminLogCompleted(this, new UsernameExistInAdminLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EnterQuestion", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void EnterQuestion(string securityCode, string userName, string question, System.DateTime date) {
            this.Invoke("EnterQuestion", new object[] {
                        securityCode,
                        userName,
                        question,
                        date});
        }
        
        /// <remarks/>
        public void EnterQuestionAsync(string securityCode, string userName, string question, System.DateTime date) {
            this.EnterQuestionAsync(securityCode, userName, question, date, null);
        }
        
        /// <remarks/>
        public void EnterQuestionAsync(string securityCode, string userName, string question, System.DateTime date, object userState) {
            if ((this.EnterQuestionOperationCompleted == null)) {
                this.EnterQuestionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEnterQuestionOperationCompleted);
            }
            this.InvokeAsync("EnterQuestion", new object[] {
                        securityCode,
                        userName,
                        question,
                        date}, this.EnterQuestionOperationCompleted, userState);
        }
        
        private void OnEnterQuestionOperationCompleted(object arg) {
            if ((this.EnterQuestionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EnterQuestionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EnterAnswer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void EnterAnswer(string securityCode, int id, string admin, string answer, System.DateTime date) {
            this.Invoke("EnterAnswer", new object[] {
                        securityCode,
                        id,
                        admin,
                        answer,
                        date});
        }
        
        /// <remarks/>
        public void EnterAnswerAsync(string securityCode, int id, string admin, string answer, System.DateTime date) {
            this.EnterAnswerAsync(securityCode, id, admin, answer, date, null);
        }
        
        /// <remarks/>
        public void EnterAnswerAsync(string securityCode, int id, string admin, string answer, System.DateTime date, object userState) {
            if ((this.EnterAnswerOperationCompleted == null)) {
                this.EnterAnswerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEnterAnswerOperationCompleted);
            }
            this.InvokeAsync("EnterAnswer", new object[] {
                        securityCode,
                        id,
                        admin,
                        answer,
                        date}, this.EnterAnswerOperationCompleted, userState);
        }
        
        private void OnEnterAnswerOperationCompleted(object arg) {
            if ((this.EnterAnswerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EnterAnswerCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetQA", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetQA(string securitycode) {
            object[] results = this.Invoke("GetQA", new object[] {
                        securitycode});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetQAAsync(string securitycode) {
            this.GetQAAsync(securitycode, null);
        }
        
        /// <remarks/>
        public void GetQAAsync(string securitycode, object userState) {
            if ((this.GetQAOperationCompleted == null)) {
                this.GetQAOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetQAOperationCompleted);
            }
            this.InvokeAsync("GetQA", new object[] {
                        securitycode}, this.GetQAOperationCompleted, userState);
        }
        
        private void OnGetQAOperationCompleted(object arg) {
            if ((this.GetQACompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetQACompleted(this, new GetQACompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void RegisterCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void UsernameExistCompletedEventHandler(object sender, UsernameExistCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UsernameExistCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UsernameExistCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void PasswordMatchCompletedEventHandler(object sender, PasswordMatchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PasswordMatchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PasswordMatchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetUserNameCompletedEventHandler(object sender, GetUserNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetUserIDCompletedEventHandler(object sender, GetUserIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void SelectUserTypeCompletedEventHandler(object sender, SelectUserTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelectUserTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SelectUserTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void SaveFileCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetFileCompletedEventHandler(object sender, GetFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetFileByUserNameCompletedEventHandler(object sender, GetFileByUserNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFileByUserNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFileByUserNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetSingleFileCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void TPGetUserIDCompletedEventHandler(object sender, TPGetUserIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TPGetUserIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TPGetUserIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetAccountCompletedEventHandler(object sender, GetAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void DeleteAccountCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void UpdateStorageCapCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void UpdateUserCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void Register2CompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void UsernameExist2CompletedEventHandler(object sender, UsernameExist2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UsernameExist2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UsernameExist2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void UpdateUserNameCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void UpdateUserEmailCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void ChangePasswordCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetfilesCompletedEventHandler(object sender, GetfilesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetfilesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetfilesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void UpdateCapCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetFilesByUserCompletedEventHandler(object sender, GetFilesByUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFilesByUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFilesByUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetFilesRestoreByUserCompletedEventHandler(object sender, GetFilesRestoreByUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFilesRestoreByUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFilesRestoreByUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void SelectRowByIDCompletedEventHandler(object sender, SelectRowByIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelectRowByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SelectRowByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void SelectRowByIDFromBinCompletedEventHandler(object sender, SelectRowByIDFromBinCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelectRowByIDFromBinCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SelectRowByIDFromBinCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void DeleteRowByIDCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void DeleteRowByIDFromBinCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void InsertIntoBinCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void InsertIntoTPFileCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void SelectAllFromBinCompletedEventHandler(object sender, SelectAllFromBinCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelectAllFromBinCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SelectAllFromBinCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void InsertTransactionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void ShowCusTransactionCompletedEventHandler(object sender, ShowCusTransactionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ShowCusTransactionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ShowCusTransactionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void UserIDExistCompletedEventHandler(object sender, UserIDExistCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UserIDExistCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UserIDExistCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetAllAccountsCompletedEventHandler(object sender, GetAllAccountsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllAccountsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllAccountsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetAccountByIDCompletedEventHandler(object sender, GetAccountByIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void UpdateStatusCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetUserNameByIDCompletedEventHandler(object sender, GetUserNameByIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserNameByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserNameByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void UsernameExistInFileCompletedEventHandler(object sender, UsernameExistInFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UsernameExistInFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UsernameExistInFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void AdminLogCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetAllAdminAccountsCompletedEventHandler(object sender, GetAllAdminAccountsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllAdminAccountsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllAdminAccountsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetAdminLogsCompletedEventHandler(object sender, GetAdminLogsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAdminLogsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAdminLogsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void UsernameExistInAdminLogCompletedEventHandler(object sender, UsernameExistInAdminLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UsernameExistInAdminLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UsernameExistInAdminLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void EnterQuestionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void EnterAnswerCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetQACompletedEventHandler(object sender, GetQACompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetQACompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetQACompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591